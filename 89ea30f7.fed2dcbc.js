(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{155:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(9),l=(n(0),n(172)),o={id:"what_is_lets",title:"What is lets ?",sidebar_label:"What is lets ?"},i={id:"what_is_lets",title:"What is lets ?",description:"Lets is a task runner.",source:"@site/docs/what_is_lets.md",permalink:"/docs/what_is_lets",editUrl:"https://github.com/lets-cli/lets/edit/master/docs/docs/what_is_lets.md",sidebar_label:"What is lets ?",sidebar:"someSidebar",next:{title:"Installation",permalink:"/docs/installation"}},c=[],s={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Lets is a task runner."),Object(l.b)("p",null,"You can think of it as a tool with a config where you can write tasks."),Object(l.b)("p",null,"The task is usually your set of commands which you can type ten times a day, for example, you want to run tests in your project:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"pull the latest master"),Object(l.b)("li",{parentName:"ul"},"spinup a database"),Object(l.b)("li",{parentName:"ul"},"run migrations"),Object(l.b)("li",{parentName:"ul"},"run tests (maybe run only one test file)")),Object(l.b)("p",null,"Or some initial setup script for your application:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"docker build -t myapp -f Dockerfile.dev ."),Object(l.b)("li",{parentName:"ul"},"docker-compose up myapp postgres")),Object(l.b)("p",null,"This all can be represented in the task."),Object(l.b)("p",null,"So is there are any of such tools out there ? "),Object(l.b)("p",null,"Well, sure there are some."),Object(l.b)("p",null,"Many developers know such a tool called Make."),Object(l.b)("p",null,"So why not Make ?"),Object(l.b)("p",null,"Make is more like a build tool and was not intended to use as a task runner (but usually used because of the lack of alternatives)."),Object(l.b)("p",null,"Make has some sort of things which are bad/hard/no convinient for developers which use task runners on a daily basis."),Object(l.b)("p",null,"Lets is a brand new task runner with a task-centric philosophy and written specifically to meet developers needs."),Object(l.b)("p",null,"Lets features:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"yaml-based config - human-readable, recognizable and convenient format for such configs (also used by kubernetes, ansible, and many others)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"has support for global env")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"has support for global computed env (known as ",Object(l.b)("inlineCode",{parentName:"p"},"eval_env"),")")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"has support for per-command env ")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"has support for per-command computed env (known as ",Object(l.b)("inlineCode",{parentName:"p"},"eval_env"),")")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"has ",Object(l.b)("inlineCode",{parentName:"p"},"checksum")," support - a feature which helps to track file changes")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"has checksum persistence")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"written in Go - which means it is easy to read, write and test as well as contributing to project"))))}p.isMDXComponent=!0},172:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,d=u["".concat(o,".").concat(m)]||u[m]||b[m]||l;return n?r.a.createElement(d,i({ref:t},s,{components:n})):r.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);